    set proxy_domain "<%= fillIn(@dicom_proxy_domain, '') %>"
    if { $proxy_domain != "" } {
        authentication.domain.create :domain $proxy_domain :ifexists ignore
    }
    
    <% @dicom_proxy_user_names.each() do |name| %>
    set name "<%= fillIn(name, '') %>"
    if { $name != "" } then {
	authentication.user.create :user $name :domain $proxy_domain \
	    :ifexists ignore
        actor.grant :name "${proxy_domain}:${name}" :type user \
	    :role -type role "pssd.dicom-ingest"
	if { $ns != "" } {
	    actor.grant :name "${proxy_domain}:${name}" :type user \
		:role -type role "${ns}.pssd.dicom-ingest"
	}
    }
    <% end %> 
    <% @dicom_ingest_notifications.each() do |addr| %>
    set addr "<%= fillIn(addr, '') %>"
    if { $addr != "" } then {
	add_email_notification "dicom" "ingest" "error" $addr
	add_email_notification "dicom" "ingest" "results" $addr
    }
    <% end %>
}

proc set_property { name value } {
    if { $value == "" } { 
       server.property.unset :name $name
    } else { 
       server.property.set :property -name $name $value
    }
}

proc add_email_notification { type name event recipient } {
    notification.add :recipient $recipient :method "email" \
	:event $event :object -type $type $name 
}

init_daris_conf


