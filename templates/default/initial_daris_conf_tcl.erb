proc init_daris_conf { } {
    if { [xvalue exists [package.exists :package "PSSD"]] == "false" } {
	error "Package PSSD has not been installed."
    }

    set ns "<% fillIn(@ns, '') %>"
    if { $ns != "" &&
         [xvalue exists [package.exists :package "${ns}-PSSD"]] == "false" } {
	error "Package ${ns}-PSSD has not been installed."
    }

    set name "<%= fillIn(@server_name, 'unknown') %>"
    set org "<%= fillIn(@server_organization, 'Unknown organization') %>"
    server.identity.set :name $name :organization $org
    set_property "jvm.data.model" "<%= java_memory_model() %>"
    set_property "jvm.memory.max" "<%= java_memory_max(@jvm_memory_max) %>"
    set_property "jvm.memory.perm.max" \
	"<%= fillIn(@jvm_memory_perm_max, '512') %>"
    set_property "mail.smtp.host" "<%= fillIn(@mail_smtp_host, '') %>"
    set_property "mail.smtp.port" "<%= fillIn(@mail_smtp_port, '25') %>"
    set_property "mail.from" "<%= fillIn(@mail_from, 'nobody@nowhere') %>"
    set_property "notification.from" \
	"<%= fillIn(@notification_from, 'nobody@nowhere') %>"

    set domain "<%= fillIn(@authentication_domain, '') %>"
    if { $domain != "" } {
        authentication.domain.create :domain $domain :ifexists ignore
    }
    set proxy_domain "<%= fillIn(@dicom_proxy_domain, '') %>"
    if { $proxy_domain != "" } {
        authentication.domain.create :domain $proxy_domain :ifexists ignore
    }
    <% @dicom_ingest_notifications.each() do |addr| %>
    set addr "<%= fillIn(addr, '') %>"
    if { $addr != "" } then {
	add_email_notification "dicom" "ingest" "error" $addr
	add_email_notification "dicom" "ingest" "results" $addr
    }
    <% end %>
}

proc set_property { name value } {
    if { $value == "" } { 
       server.property.unset :name $name
    } else { 
       server.property.set :property -name $name $value
    }
}

proc add_email_notification { type name event recipient } {
    notification.add :recipient $recipient :method "email" \
	:event $event :object -type $type $name 
}

init_daris_conf


